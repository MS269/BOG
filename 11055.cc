// lis(pos) = pos번째 항부터 시작하는 증가 부분 수열 중 가장 긴 길이

// 최종적으로 얻고자 하는 답은 lis(0) ~ lis(N-1) 중 최댓값이 됩니다.

// 조금 어렵습니다. 지금까지와는 달리 한 문제를 푸는 데 O(N)의 시간이 걸립니다.

// pos보다 오른쪽에 있는 A[pos]보다 큰 모든 항에 대해, 그 위치를 next라 할 때 lis(next)+1 중 최댓값을 골라내야 하고, 때문에 오른쪽에 남은 모든 항을 다 검사해 보아야 합니다.

// 따라서 공간복잡도는 O(N)이지만 시간복잡도는 O(N)*O(N) = O(N^2)입니다.
// [출처] 동적 계획법(Dynamic Programming) (수정: 2019-02-07)|작성자 라이